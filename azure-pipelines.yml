trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  ARM_CLIENT_ID: '$(servicePrincipalId)'
  ARM_CLIENT_SECRET: '$(servicePrincipalKey)'
  ARM_SUBSCRIPTION_ID: '$(subscriptionId)'
  ARM_TENANT_ID: '$(tenantId)'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- task: InstallTerraform@0
  inputs:
    terraformVersion: '0.14.11'

- script: |
    echo "##vso[task.setvariable variable=terraformVersion;]$(terraform --version)"
  displayName: 'Check Terraform version'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    terraform init
  displayName: 'Terraform Init'

- script: |
    terraform apply -auto-approve
  displayName: 'Terraform Apply'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)

- task: AzureCLI@2
  inputs:
    azureSubscription: 'your-service-connection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az aks get-credentials --resource-group $(terraform output -raw resource_group_name) --name $(terraform output -raw aks_cluster_name)
      kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
