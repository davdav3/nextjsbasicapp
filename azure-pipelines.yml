trigger:
- main

pool:
  name: my



steps:
- powershell: |
    $env:PATH += ";C:\Program Files\Microsoft SDKs\Azure\CLI2\wbin"
    Write-Output $env:PATH
  displayName: 'Set and Print PATH Variable'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'devops'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)
      az account set --subscription $(subscriptionId)
      az aks get-credentials --resource-group $(resource_group_name) --name $(aks_cluster_name)

- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'

- script: |
    terraform init
  displayName: 'Terraform Init'

- script: |
    terraform plan -out=tfplan -var "resource_group_name=$(resource_group_name)" -var "location=$(location)" -var "vnet_name=$(vnet_name)" -var "subnet_name=$(subnet_name)" -var "aks_cluster_name=$(aks_cluster_name)" -var "acr_name=$(acr_name)"
  displayName: 'Terraform Plan'

- script: |
    terraform apply -auto-approve tfplan
  displayName: 'Terraform Apply'

- task: Kubernetes@1
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'acr'
    azureResourceGroup: '$(resource_group_name)'
    kubernetesCluster: '$(aks_cluster_name)'
    namespace: 'default'
    command: 'apply'
    useConfigurationFile: true
    configuration: '$(Pipeline.Workspace)/manifests/ingress-controller.yaml'
    secretType: 'dockerRegistry'
    containerRegistry: '$(acr_name)'
    dockerRegistryEndpoint: 'acr'
    secretName: 'acr-secret'
    forceUpdate: true